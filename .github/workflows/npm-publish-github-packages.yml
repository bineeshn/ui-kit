# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish yarn package

on:
  pull_request:
    types:
      - opened  # Triggered when new PR is opened
      - synchronize  # Triggered when new commits are pushed to the PR
    branches:
      - main
      
  # Trigger publish when a PR is merged
  pull_request_target:
    types:
      - closed
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # - name: Run tests
      #   run: yarn test

  publish:
    if: github.event.pull_request.merged == true
    needs: test  # Ensure the publish job only runs if the test job succeeds
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
          persist-credentials: true  # Persist credentials for later steps

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@bineeshn'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # - name: Determine version bump
      #   id: version
      #   run: |
      #     PR_TITLE="${{ github.event.pull_request.title }}"
      #     PR_TITLE_LOWER=$(echo "$PR_TITLE" | tr '[:upper:]' '[:lower:]')

      #     if [[ $PR_TITLE_LOWER == *"major"* ]]; then
      #       echo "BUMP=major" >> $GITHUB_OUTPUT
      #     elif [[ $PR_TITLE_LOWER == *"minor"* ]]; then
      #       echo "BUMP=minor" >> $GITHUB_OUTPUT
      #     else
      #       echo "BUMP=patch" >> $GITHUB_OUTPUT
      #     fi

      # - name: Bump version
      #   run: |
      #     git config --global user.name "GitHub Actions"
      #     git config --global user.email "actions@github.com"
      #     yarn version --${{ steps.version.outputs.BUMP }}

      # - name: Push version commit and tag
      #   run: |
      #     git push origin main
      #     git push --tags

      - name: Build package
        run: yarn build

      - name: Set up .npmrc for GitHub Packages
        run: |
          echo "@bineeshn:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Publish package
        run: yarn publish --non-interactive
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}